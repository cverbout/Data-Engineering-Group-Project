# This viminfo file was generated by Vim 9.0.
# You may edit it if you're careful!

# Viminfo version
|1,4

# Value of 'encoding' when this file was written
*encoding=utf-8


# hlsearch on (H) or off (h):
~h
# Last Search Pattern:
~Msle0~/\<CloudLoggingHandler\>

# Command Line History (newest to oldest):
:wqa
|2,0,1713825062,,"wqa"
:qa
|2,0,1713825027,,"qa"
:wq
|2,0,1713380009,,"wq"

# Search String History (newest to oldest):
?/print
|2,1,1713380007,47,"print"
? \<CloudLoggingHandler\>
|2,1,1713371302,,"\\<CloudLoggingHandler\\>"
? \<py\>
|2,1,1712982859,,"\\<py\\>"
? \<0\>
|2,1,1712982853,,"\\<0\\>"

# Expression History (newest to oldest):

# Input Line History (newest to oldest):

# Debug Line History (newest to oldest):

# Registers:
"0	CHAR	0
	import requests
	import pandas as pd
	from datetime import datetime
	import json
	import time
	from tqdm import tqdm
	from google.cloud import storage
	
	
	
	def get_vehicle_ids():
	    doc_key = "10VKMye65LhbEgMLld5Ol3lOocWUwCaEgnPVgFQf9em0"
	    url = f"https://docs.google.com/spreadsheets/d/{doc_key}/export?format=csv"
	    response = requests.get(url)
	    csv_data = response.content
	    with open("vehicle_ids_sheet.csv", "wb") as file:
	        file.write(csv_data)
	    vehicle_ids = pd.read_csv("vehicle_ids_sheet.csv")['Doodle'].tolist()
	    return vehicle_ids
	
	def save_to_gcs(data, filename):
	    bucket_name = 'cs510-spring24-project1-bucket'
	    folder_name = "data_via_direct_download"
	    bucket_path = f"gs://{bucket_name}/{folder_name}/"
	    client = storage.Client.from_service_account_json('cs510-project1-6c1b06b5846a.json')
	    bucket = client.bucket(bucket_path)
	    blob = bucket.blob(filename)
	    blob.upload_from_string(json.dumps(data), content_type='application/json')
	    print(f"Data saved successfully to GCS with filename {filename}")
	
	def save_trimet_doodle_data():
	    vehicle_ids = get_vehicle_ids()
	    all_breadcrumbs = {}
	
	    for i, vehicle_id in enumerate(tqdm(vehicle_ids, desc="Processing vehicle IDs")):
	        index_str = f"[{i+1:03}/{len(vehicle_ids):03}]"
	        success = False
	        attempts = 0
	        while not success and attempts < 5:
	            url = f"https://busdata.cs.pdx.edu/api/getBreadCrumbs?vehicle_id={vehicle_id}"
	            response = requests.get(url)
	            attempts += 1
	            if response.status_code == 200:
	                all_breadcrumbs[vehicle_id] = response.json()
	                print(f"{index_str} Successfully fetched data for vehicle ID {vehicle_id}")
	                success = True
	            time.sleep(1)
	        if not success:
	            all_breadcrumbs[vehicle_id] = []
	            print(f"{index_str} Failed to get data after 5 attempts for vehicle ID {vehicle_id}")
|3,0,0,0,50,0,1713287924,"import requests","import pandas as pd","from datetime import datetime","import json","import time","from tqdm import tqdm","from google.cloud import storage","","","","def get_vehicle_ids():","    doc_key = \"10VKMye65LhbEgMLld5Ol3lOocWUwCaEgnPVgFQf9em0\"","    url = f\"https://docs.google.com/spreadsheets/d/{doc_key}/export?format=csv\"","    response = requests.get(url)","    csv_data = response.content",>59
|<"    with open(\"vehicle_ids_sheet.csv\", \"wb\") as file:","        file.write(csv_data)","    vehicle_ids = pd.read_csv(\"vehicle_ids_sheet.csv\")['Doodle'].tolist()","    return vehicle_ids","","def save_to_gcs(data, filename):","    bucket_name = 'cs510-spring24-project1-bucket'","    folder_name = \"data_via_direct_download\"","    bucket_path = f\"gs://{bucket_name}/{folder_name}/\"","    client = storage.Client.from_service_account_json('cs510-project1-6c1b06b5846a.json')",>41
|<"    bucket = client.bucket(bucket_path)","    blob = bucket.blob(filename)","    blob.upload_from_string(json.dumps(data), content_type='application/json')","    print(f\"Data saved successfully to GCS with filename {filename}\")","","def save_trimet_doodle_data():","    vehicle_ids = get_vehicle_ids()","    all_breadcrumbs = {}","","    for i, vehicle_id in enumerate(tqdm(vehicle_ids, desc=\"Processing vehicle IDs\")):","        index_str = f\"[{i+1:03}/{len(vehicle_ids):03}]\"",>25
|<"        success = False","        attempts = 0","        while not success and attempts < 5:","            url = f\"https://busdata.cs.pdx.edu/api/getBreadCrumbs?vehicle_id={vehicle_id}\"","            response = requests.get(url)","            attempts += 1","            if response.status_code == 200:","                all_breadcrumbs[vehicle_id] = response.json()","                print(f\"{index_str} Successfully fetched data for vehicle ID {vehicle_id}\")",>32
|<"                success = True","            time.sleep(1)","        if not success:","            all_breadcrumbs[vehicle_id] = []","            print(f\"{index_str} Failed to get data after 5 attempts for vehicle ID {vehicle_id}\")"
""1	LINE	0
	import requests
	import pandas as pd
	from datetime import datetime
	from google.cloud import pubsub_v1
	import json
	import time
	from tqdm import tqdm
	import logging
	
	# Setup basic logging
	logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')
	
	def get_vehicle_ids():
	    doc_key = "10VKMye65LhbEgMLld5Ol3lOocWUwCaEgnPVgFQf9em0"
	    url = f"https://docs.google.com/spreadsheets/d/{doc_key}/export?format=csv"
	    response = requests.get(url)
	    csv_data = response.content
	    with open("vehicle_ids_sheet.csv", "wb") as file:
	        file.write(csv_data)
	    vehicle_ids = pd.read_csv("vehicle_ids_sheet.csv")['Doodle'].tolist()
	    return vehicle_ids
	
	def publish_breadcrumbs():
	    project_id = "cs510-project1"
	    topic_id = "cs510-spring24-topic"
	    publisher = pubsub_v1.PublisherClient()
	    topic_path = publisher.topic_path(project_id, topic_id)
	
	    vehicle_ids = get_vehicle_ids()
	    total_published = 0
	
	    for vehicle_id in tqdm(vehicle_ids, desc="Processing vehicle IDs"):
	        url = f"https://busdata.cs.pdx.edu/api/getBreadCrumbs?vehicle_id={vehicle_id}"
	        response = requests.get(url)
	        if response.status_code == 200:
	            breadcrumbs = response.json()
	            for breadcrumb in breadcrumbs:
	                data_str = json.dumps(breadcrumb)
	                data_bytes = data_str.encode('utf-8')
	                publisher.publish(topic_path, data_bytes)
	                total_published += 1
	        else:
	            logging.error(f"Failed to fetch data for vehicle ID {vehicle_id}")
	        time.sleep(1)  # Respectful delay to avoid rate limiting
	    
	    logging.info(f"Total breadcrumbs published: {total_published}")
	
	if __name__ == "__main__":
	    publish_breadcrumbs()
	
|3,1,1,1,50,0,1713822317,"import requests","import pandas as pd","from datetime import datetime","from google.cloud import pubsub_v1","import json","import time","from tqdm import tqdm","import logging","","# Setup basic logging","logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')","","def get_vehicle_ids():","    doc_key = \"10VKMye65LhbEgMLld5Ol3lOocWUwCaEgnPVgFQf9em0\"",>83
|<"    url = f\"https://docs.google.com/spreadsheets/d/{doc_key}/export?format=csv\"","    response = requests.get(url)","    csv_data = response.content","    with open(\"vehicle_ids_sheet.csv\", \"wb\") as file:","        file.write(csv_data)","    vehicle_ids = pd.read_csv(\"vehicle_ids_sheet.csv\")['Doodle'].tolist()","    return vehicle_ids","","def publish_breadcrumbs():","    project_id = \"cs510-project1\"","    topic_id = \"cs510-spring24-topic\"",>45
|<"    publisher = pubsub_v1.PublisherClient()","    topic_path = publisher.topic_path(project_id, topic_id)","","    vehicle_ids = get_vehicle_ids()","    total_published = 0","","    for vehicle_id in tqdm(vehicle_ids, desc=\"Processing vehicle IDs\"):","        url = f\"https://busdata.cs.pdx.edu/api/getBreadCrumbs?vehicle_id={vehicle_id}\"","        response = requests.get(url)","        if response.status_code == 200:","            breadcrumbs = response.json()",>44
|<"            for breadcrumb in breadcrumbs:","                data_str = json.dumps(breadcrumb)","                data_bytes = data_str.encode('utf-8')","                publisher.publish(topic_path, data_bytes)","                total_published += 1","        else:","            logging.error(f\"Failed to fetch data for vehicle ID {vehicle_id}\")","        time.sleep(1)  # Respectful delay to avoid rate limiting","    ",>71
|<"    logging.info(f\"Total breadcrumbs published: {total_published}\")","","if __name__ == \"__main__\":","    publish_breadcrumbs()",""
"2	LINE	0
	import google.cloud.pubsub_v1 as pubsub_v1
	from google.cloud import storage
	import json
	import google.cloud.logging
	from google.cloud.logging.handlers import CloudLoggingHandler
	import logging
	import sys
	from datetime import datetime
	
	# Inline argument which gives receiver a title for logging
	instance_id = sys.argv[1] if len(sys.argv) > 1 else "CronJob Receiver"
	
	project_id = "cs510-project1"
	subscription_id = "cs510-spring24-sub"
	subscriber = pubsub_v1.SubscriberClient()
	subscription_path = subscriber.subscription_path(project_id, subscription_id)
	
	# Setup logging
	client = google.cloud.logging.Client()
	handler = CloudLoggingHandler(client)
	cloud_logger = logging.getLogger('cloudLogger')
	cloud_logger.setLevel(logging.INFO)
	cloud_logger.addHandler(handler)
	
	# Temporary storage for messages
	messages = []
	
	# Prepare storage client
	storage_client = storage.Client()
	bucket = storage_client.bucket('cs510-spring24-project1-bucket')
	
	def callback(message):
	    message_data = json.loads(message.data.decode('utf-8'))
	    messages.append(message_data)
	    message.ack()
	    if len(messages) % 10000 == 0:
	        print(f"{instance_id}: Processed {len(messages)} messages.", end='\r', flush=True)
	
	
	def process_messages(messages):
	    if messages:
	        cloud_logger.info(f"Processing {len(messages)} messages")
	        # Processing logic here
	        cloud_logger.info("All messages processed and saved.")
	    else:
	        cloud_logger.info("No new messages to process.")
	
	
	def sort_and_store_messages():
	    if not messages:
|3,0,2,1,50,0,1713822185,"import google.cloud.pubsub_v1 as pubsub_v1","from google.cloud import storage","import json","import google.cloud.logging","from google.cloud.logging.handlers import CloudLoggingHandler","import logging","import sys","from datetime import datetime","","# Inline argument which gives receiver a title for logging","instance_id = sys.argv[1] if len(sys.argv) > 1 else \"CronJob Receiver\"","","project_id = \"cs510-project1\"",>42
|<"subscription_id = \"cs510-spring24-sub\"","subscriber = pubsub_v1.SubscriberClient()","subscription_path = subscriber.subscription_path(project_id, subscription_id)","","# Setup logging","client = google.cloud.logging.Client()","handler = CloudLoggingHandler(client)","cloud_logger = logging.getLogger('cloudLogger')","cloud_logger.setLevel(logging.INFO)","cloud_logger.addHandler(handler)","","# Temporary storage for messages","messages = []","","# Prepare storage client",>35
|<"storage_client = storage.Client()","bucket = storage_client.bucket('cs510-spring24-project1-bucket')","","def callback(message):","    message_data = json.loads(message.data.decode('utf-8'))","    messages.append(message_data)","    message.ack()","    if len(messages) % 10000 == 0:","        print(f\"{instance_id}: Processed {len(messages)} messages.\", end='\\r', flush=True)","","","def process_messages(messages):","    if messages:",>69
|<"        cloud_logger.info(f\"Processing {len(messages)} messages\")","        # Processing logic here","        cloud_logger.info(\"All messages processed and saved.\")","    else:","        cloud_logger.info(\"No new messages to process.\")","","","def sort_and_store_messages():","    if not messages:"
"3	LINE	0
	
|3,0,3,1,1,0,1713822141,""
"4	LINE	0
	
|3,0,4,1,1,0,1713821528,""
"5	LINE	0
	def callback(message):
	    message_data = json.loads(message.data.decode('utf-8'))
	    messages.append(message_data)
	    message.ack()
|3,0,5,1,4,0,1713820797,"def callback(message):","    message_data = json.loads(message.data.decode('utf-8'))","    messages.append(message_data)","    message.ack()"
"6	LINE	0
	def callback(message):
	    message_data = json.loads(message.data.decode('utf-8'))
	    messages.append(message_data)
	    message.ack()
|3,0,6,1,4,0,1713820797,"def callback(message):","    message_data = json.loads(message.data.decode('utf-8'))","    messages.append(message_data)","    message.ack()"
"7	LINE	0
	import google.cloud.pubsub_v1 as pubsub_v1
	from google.cloud import storage
	import json
	import google.cloud.logging
	from google.cloud.logging.handlers import CloudLoggingHandler
	import logging
	import sys
	from datetime import datetime
	
	# Inline argument which gives receiver a title for logging
	instance_id = sys.argv[1] if len(sys.argv) > 1 else "CronJob Receiver"
	
	project_id = "cs510-project1"
	subscription_id = "cs510-spring24-sub"
	subscriber = pubsub_v1.SubscriberClient()
	subscription_path = subscriber.subscription_path(project_id, subscription_id)
	
	client = google.cloud.logging.Client()
	handler = CloudLoggingHandler(client)
	cloud_logger = logging.getLogger('cloudLogger')
	cloud_logger.setLevel(logging.INFO)
	cloud_logger.addHandler(handler)
	
	# Prepare storage client
	storage_client = storage.Client()
	bucket = storage_client.bucket('cs510-spring24-project1-bucket')
	
	# Temporary storage for messages
	messages = []
	
	def callback(message):
	    message_data = json.loads(message.data.decode('utf-8'))
	    messages.append(message_data)
	    message.ack()  # Acknowledge the message
	    
	    if len(messages) % 1000 == 0:
	        print(f"{instance_id}: Processed {len(messages)} messages.", end='\r', flush=True)
	
	
	def sort_and_store_messages():
	    if not messages:
	        cloud_logger.info("No messages to process.")
	        return
	
	    # Group messages by 'VEHICLE_ID'
	    grouped_messages = {}
	    for message in messages:
	        vehicle_id = message['VEHICLE_ID']
	        if vehicle_id not in grouped_messages:
	            grouped_messages[vehicle_id] = []
|3,0,7,1,50,0,1713808494,"import google.cloud.pubsub_v1 as pubsub_v1","from google.cloud import storage","import json","import google.cloud.logging","from google.cloud.logging.handlers import CloudLoggingHandler","import logging","import sys","from datetime import datetime","","# Inline argument which gives receiver a title for logging","instance_id = sys.argv[1] if len(sys.argv) > 1 else \"CronJob Receiver\"","","project_id = \"cs510-project1\"",>42
|<"subscription_id = \"cs510-spring24-sub\"","subscriber = pubsub_v1.SubscriberClient()","subscription_path = subscriber.subscription_path(project_id, subscription_id)","","client = google.cloud.logging.Client()","handler = CloudLoggingHandler(client)","cloud_logger = logging.getLogger('cloudLogger')","cloud_logger.setLevel(logging.INFO)","cloud_logger.addHandler(handler)","","# Prepare storage client","storage_client = storage.Client()",>66
|<"bucket = storage_client.bucket('cs510-spring24-project1-bucket')","","# Temporary storage for messages","messages = []","","def callback(message):","    message_data = json.loads(message.data.decode('utf-8'))","    messages.append(message_data)","    message.ack()  # Acknowledge the message","    ","    if len(messages) % 1000 == 0:","        print(f\"{instance_id}: Processed {len(messages)} messages.\", end='\\r', flush=True)","","","def sort_and_store_messages():",>22
|<"    if not messages:","        cloud_logger.info(\"No messages to process.\")","        return","","    # Group messages by 'VEHICLE_ID'","    grouped_messages = {}","    for message in messages:","        vehicle_id = message['VEHICLE_ID']","        if vehicle_id not in grouped_messages:","            grouped_messages[vehicle_id] = []"
"8	LINE	0
	import requests
	import pandas as pd
	from datetime import datetime
	from google.cloud import pubsub_v1
	import json
	import time
	from tqdm import tqdm
	
	def get_vehicle_ids():
	    doc_key = "10VKMye65LhbEgMLld5Ol3lOocWUwCaEgnPVgFQf9em0"
	    url = f"https://docs.google.com/spreadsheets/d/{doc_key}/export?format=csv"
	    response = requests.get(url)
	    csv_data = response.content
	    with open("vehicle_ids_sheet.csv", "wb") as file:
	        file.write(csv_data)
	    vehicle_ids = pd.read_csv("vehicle_ids_sheet.csv")['Doodle'].tolist()
	    return vehicle_ids
	
	def publish_breadcrumbs():
	    project_id = "cs510-project1"
	    topic_id = "cs510-spring24-topic"
	    publisher = pubsub_v1.PublisherClient()
	    topic_path = publisher.topic_path(project_id, topic_id)
	
	    vehicle_ids = get_vehicle_ids()
	
	    for vehicle_id in tqdm(vehicle_ids, desc="Processing vehicle IDs"):
	        url = f"https://busdata.cs.pdx.edu/api/getBreadCrumbs?vehicle_id={vehicle_id}"
	        response = requests.get(url)
	        if response.status_code == 200:
	            breadcrumbs = response.json()
	            for breadcrumb in breadcrumbs:
	                data_str = json.dumps(breadcrumb)
	                data_bytes = data_str.encode('utf-8')
	                publisher.publish(topic_path, data_bytes)
	        time.sleep(1)  # Respectful delay to avoid rate limiting
	
	if __name__ == "__main__":
	    publish_breadcrumbs()
	
|3,0,8,1,40,0,1713808463,"import requests","import pandas as pd","from datetime import datetime","from google.cloud import pubsub_v1","import json","import time","from tqdm import tqdm","","def get_vehicle_ids():","    doc_key = \"10VKMye65LhbEgMLld5Ol3lOocWUwCaEgnPVgFQf9em0\"","    url = f\"https://docs.google.com/spreadsheets/d/{doc_key}/export?format=csv\"","    response = requests.get(url)","    csv_data = response.content",>59
|<"    with open(\"vehicle_ids_sheet.csv\", \"wb\") as file:","        file.write(csv_data)","    vehicle_ids = pd.read_csv(\"vehicle_ids_sheet.csv\")['Doodle'].tolist()","    return vehicle_ids","","def publish_breadcrumbs():","    project_id = \"cs510-project1\"","    topic_id = \"cs510-spring24-topic\"","    publisher = pubsub_v1.PublisherClient()","    topic_path = publisher.topic_path(project_id, topic_id)","","    vehicle_ids = get_vehicle_ids()","",>75
|<"    for vehicle_id in tqdm(vehicle_ids, desc=\"Processing vehicle IDs\"):","        url = f\"https://busdata.cs.pdx.edu/api/getBreadCrumbs?vehicle_id={vehicle_id}\"","        response = requests.get(url)","        if response.status_code == 200:","            breadcrumbs = response.json()","            for breadcrumb in breadcrumbs:","                data_str = json.dumps(breadcrumb)","                data_bytes = data_str.encode('utf-8')",>59
|<"                publisher.publish(topic_path, data_bytes)","        time.sleep(1)  # Respectful delay to avoid rate limiting","","if __name__ == \"__main__\":","    publish_breadcrumbs()",""
"9	LINE	0
	    blob = bucket.blob(filename)
|3,0,9,1,1,0,1713463969,"    blob = bucket.blob(filename)"
"-	CHAR	0
	'cs510-project1-6c1b06b5846a.json'
|3,0,36,0,1,0,1713289532,"'cs510-project1-6c1b06b5846a.json'"

# File marks:
'0  4  36  ~/topic_clean.py
|4,48,4,36,1713825062,"~/topic_clean.py"
'1  18  28  ~/topic_clean.py
|4,49,18,28,1713825027,"~/topic_clean.py"
'2  18  28  ~/topic_clean.py
|4,50,18,28,1713825027,"~/topic_clean.py"
'3  42  8  ~/recieve_breadcrumb_messages.py
|4,51,42,8,1713823647,"~/recieve_breadcrumb_messages.py"
'4  80  28  ~/recieve_breadcrumb_messages.py
|4,52,80,28,1713822643,"~/recieve_breadcrumb_messages.py"
'5  79  28  ~/recieve_breadcrumb_messages.py
|4,53,79,28,1713822643,"~/recieve_breadcrumb_messages.py"
'6  24  0  ~/publish_breadcrumb_messages.py
|4,54,24,0,1713822345,"~/publish_breadcrumb_messages.py"
'7  80  4  ~/recieve_breadcrumb_messages.py
|4,55,80,4,1713822288,"~/recieve_breadcrumb_messages.py"
'8  79  4  ~/recieve_breadcrumb_messages.py
|4,56,79,4,1713822288,"~/recieve_breadcrumb_messages.py"
'9  1  49  ~/recieve_breadcrumb_messages.py
|4,57,1,49,1713821685,"~/recieve_breadcrumb_messages.py"

# Jumplist (newest first):
-'  4  36  ~/topic_clean.py
|4,39,4,36,1713825062,"~/topic_clean.py"
-'  18  28  ~/topic_clean.py
|4,39,18,28,1713825036,"~/topic_clean.py"
-'  18  28  ~/topic_clean.py
|4,39,18,28,1713825027,"~/topic_clean.py"
-'  19  85  ~/topic_clean.py
|4,39,19,85,1713824951,"~/topic_clean.py"
-'  19  85  ~/topic_clean.py
|4,39,19,85,1713824951,"~/topic_clean.py"
-'  42  8  ~/recieve_breadcrumb_messages.py
|4,39,42,8,1713823647,"~/recieve_breadcrumb_messages.py"
-'  42  8  ~/recieve_breadcrumb_messages.py
|4,39,42,8,1713823647,"~/recieve_breadcrumb_messages.py"
-'  42  8  ~/recieve_breadcrumb_messages.py
|4,39,42,8,1713823647,"~/recieve_breadcrumb_messages.py"
-'  42  8  ~/recieve_breadcrumb_messages.py
|4,39,42,8,1713823647,"~/recieve_breadcrumb_messages.py"
-'  80  28  ~/recieve_breadcrumb_messages.py
|4,39,80,28,1713823242,"~/recieve_breadcrumb_messages.py"
-'  80  28  ~/recieve_breadcrumb_messages.py
|4,39,80,28,1713823242,"~/recieve_breadcrumb_messages.py"
-'  80  28  ~/recieve_breadcrumb_messages.py
|4,39,80,28,1713823242,"~/recieve_breadcrumb_messages.py"
-'  80  28  ~/recieve_breadcrumb_messages.py
|4,39,80,28,1713823242,"~/recieve_breadcrumb_messages.py"
-'  79  28  ~/recieve_breadcrumb_messages.py
|4,39,79,28,1713822643,"~/recieve_breadcrumb_messages.py"
-'  79  28  ~/recieve_breadcrumb_messages.py
|4,39,79,28,1713822643,"~/recieve_breadcrumb_messages.py"
-'  79  28  ~/recieve_breadcrumb_messages.py
|4,39,79,28,1713822643,"~/recieve_breadcrumb_messages.py"
-'  79  28  ~/recieve_breadcrumb_messages.py
|4,39,79,28,1713822643,"~/recieve_breadcrumb_messages.py"
-'  24  0  ~/publish_breadcrumb_messages.py
|4,39,24,0,1713822345,"~/publish_breadcrumb_messages.py"
-'  24  0  ~/publish_breadcrumb_messages.py
|4,39,24,0,1713822345,"~/publish_breadcrumb_messages.py"
-'  24  0  ~/publish_breadcrumb_messages.py
|4,39,24,0,1713822345,"~/publish_breadcrumb_messages.py"
-'  24  0  ~/publish_breadcrumb_messages.py
|4,39,24,0,1713822345,"~/publish_breadcrumb_messages.py"
-'  24  0  ~/publish_breadcrumb_messages.py
|4,39,24,0,1713822345,"~/publish_breadcrumb_messages.py"
-'  24  0  ~/publish_breadcrumb_messages.py
|4,39,24,0,1713822345,"~/publish_breadcrumb_messages.py"
-'  24  0  ~/publish_breadcrumb_messages.py
|4,39,24,0,1713822345,"~/publish_breadcrumb_messages.py"
-'  24  0  ~/publish_breadcrumb_messages.py
|4,39,24,0,1713822345,"~/publish_breadcrumb_messages.py"
-'  24  0  ~/publish_breadcrumb_messages.py
|4,39,24,0,1713822345,"~/publish_breadcrumb_messages.py"
-'  24  0  ~/publish_breadcrumb_messages.py
|4,39,24,0,1713822345,"~/publish_breadcrumb_messages.py"
-'  24  0  ~/publish_breadcrumb_messages.py
|4,39,24,0,1713822345,"~/publish_breadcrumb_messages.py"
-'  24  0  ~/publish_breadcrumb_messages.py
|4,39,24,0,1713822345,"~/publish_breadcrumb_messages.py"
-'  24  0  ~/publish_breadcrumb_messages.py
|4,39,24,0,1713822345,"~/publish_breadcrumb_messages.py"
-'  24  0  ~/publish_breadcrumb_messages.py
|4,39,24,0,1713822345,"~/publish_breadcrumb_messages.py"
-'  24  0  ~/publish_breadcrumb_messages.py
|4,39,24,0,1713822345,"~/publish_breadcrumb_messages.py"
-'  24  0  ~/publish_breadcrumb_messages.py
|4,39,24,0,1713822345,"~/publish_breadcrumb_messages.py"
-'  1  0  ~/publish_breadcrumb_messages.py
|4,39,1,0,1713822316,"~/publish_breadcrumb_messages.py"
-'  1  0  ~/publish_breadcrumb_messages.py
|4,39,1,0,1713822316,"~/publish_breadcrumb_messages.py"
-'  1  0  ~/publish_breadcrumb_messages.py
|4,39,1,0,1713822316,"~/publish_breadcrumb_messages.py"
-'  1  0  ~/publish_breadcrumb_messages.py
|4,39,1,0,1713822316,"~/publish_breadcrumb_messages.py"
-'  1  0  ~/publish_breadcrumb_messages.py
|4,39,1,0,1713822316,"~/publish_breadcrumb_messages.py"
-'  1  0  ~/publish_breadcrumb_messages.py
|4,39,1,0,1713822316,"~/publish_breadcrumb_messages.py"
-'  1  0  ~/publish_breadcrumb_messages.py
|4,39,1,0,1713822316,"~/publish_breadcrumb_messages.py"
-'  1  0  ~/publish_breadcrumb_messages.py
|4,39,1,0,1713822316,"~/publish_breadcrumb_messages.py"
-'  1  0  ~/publish_breadcrumb_messages.py
|4,39,1,0,1713822316,"~/publish_breadcrumb_messages.py"
-'  1  0  ~/publish_breadcrumb_messages.py
|4,39,1,0,1713822316,"~/publish_breadcrumb_messages.py"
-'  1  0  ~/publish_breadcrumb_messages.py
|4,39,1,0,1713822316,"~/publish_breadcrumb_messages.py"
-'  1  0  ~/publish_breadcrumb_messages.py
|4,39,1,0,1713822316,"~/publish_breadcrumb_messages.py"
-'  1  0  ~/publish_breadcrumb_messages.py
|4,39,1,0,1713822316,"~/publish_breadcrumb_messages.py"
-'  1  0  ~/publish_breadcrumb_messages.py
|4,39,1,0,1713822316,"~/publish_breadcrumb_messages.py"
-'  1  0  ~/publish_breadcrumb_messages.py
|4,39,1,0,1713822316,"~/publish_breadcrumb_messages.py"
-'  1  0  ~/publish_breadcrumb_messages.py
|4,39,1,0,1713822316,"~/publish_breadcrumb_messages.py"
-'  79  4  ~/recieve_breadcrumb_messages.py
|4,39,79,4,1713822288,"~/recieve_breadcrumb_messages.py"
-'  79  4  ~/recieve_breadcrumb_messages.py
|4,39,79,4,1713822288,"~/recieve_breadcrumb_messages.py"
-'  79  4  ~/recieve_breadcrumb_messages.py
|4,39,79,4,1713822288,"~/recieve_breadcrumb_messages.py"
-'  79  4  ~/recieve_breadcrumb_messages.py
|4,39,79,4,1713822288,"~/recieve_breadcrumb_messages.py"
-'  79  4  ~/recieve_breadcrumb_messages.py
|4,39,79,4,1713822288,"~/recieve_breadcrumb_messages.py"
-'  79  4  ~/recieve_breadcrumb_messages.py
|4,39,79,4,1713822288,"~/recieve_breadcrumb_messages.py"
-'  79  4  ~/recieve_breadcrumb_messages.py
|4,39,79,4,1713822288,"~/recieve_breadcrumb_messages.py"
-'  79  4  ~/recieve_breadcrumb_messages.py
|4,39,79,4,1713822288,"~/recieve_breadcrumb_messages.py"
-'  1  0  ~/recieve_breadcrumb_messages.py
|4,39,1,0,1713822183,"~/recieve_breadcrumb_messages.py"
-'  1  0  ~/recieve_breadcrumb_messages.py
|4,39,1,0,1713822183,"~/recieve_breadcrumb_messages.py"
-'  1  0  ~/recieve_breadcrumb_messages.py
|4,39,1,0,1713822183,"~/recieve_breadcrumb_messages.py"
-'  1  0  ~/recieve_breadcrumb_messages.py
|4,39,1,0,1713822183,"~/recieve_breadcrumb_messages.py"
-'  1  0  ~/recieve_breadcrumb_messages.py
|4,39,1,0,1713822183,"~/recieve_breadcrumb_messages.py"
-'  1  0  ~/recieve_breadcrumb_messages.py
|4,39,1,0,1713822183,"~/recieve_breadcrumb_messages.py"
-'  1  0  ~/recieve_breadcrumb_messages.py
|4,39,1,0,1713822183,"~/recieve_breadcrumb_messages.py"
-'  1  0  ~/recieve_breadcrumb_messages.py
|4,39,1,0,1713822183,"~/recieve_breadcrumb_messages.py"
-'  1  0  ~/recieve_breadcrumb_messages.py
|4,39,1,0,1713822183,"~/recieve_breadcrumb_messages.py"
-'  1  0  ~/recieve_breadcrumb_messages.py
|4,39,1,0,1713822183,"~/recieve_breadcrumb_messages.py"
-'  1  0  ~/recieve_breadcrumb_messages.py
|4,39,1,0,1713822183,"~/recieve_breadcrumb_messages.py"
-'  1  0  ~/recieve_breadcrumb_messages.py
|4,39,1,0,1713822183,"~/recieve_breadcrumb_messages.py"
-'  1  0  ~/recieve_breadcrumb_messages.py
|4,39,1,0,1713822183,"~/recieve_breadcrumb_messages.py"
-'  1  0  ~/recieve_breadcrumb_messages.py
|4,39,1,0,1713822183,"~/recieve_breadcrumb_messages.py"
-'  1  0  ~/recieve_breadcrumb_messages.py
|4,39,1,0,1713822183,"~/recieve_breadcrumb_messages.py"
-'  1  0  ~/recieve_breadcrumb_messages.py
|4,39,1,0,1713822183,"~/recieve_breadcrumb_messages.py"
-'  50  49  ~/recieve_breadcrumb_messages.py
|4,39,50,49,1713821685,"~/recieve_breadcrumb_messages.py"
-'  49  49  ~/recieve_breadcrumb_messages.py
|4,39,49,49,1713821685,"~/recieve_breadcrumb_messages.py"
-'  49  49  ~/recieve_breadcrumb_messages.py
|4,39,49,49,1713821685,"~/recieve_breadcrumb_messages.py"
-'  49  49  ~/recieve_breadcrumb_messages.py
|4,39,49,49,1713821685,"~/recieve_breadcrumb_messages.py"
-'  50  49  ~/recieve_breadcrumb_messages.py
|4,39,50,49,1713821685,"~/recieve_breadcrumb_messages.py"
-'  49  49  ~/recieve_breadcrumb_messages.py
|4,39,49,49,1713821685,"~/recieve_breadcrumb_messages.py"
-'  49  49  ~/recieve_breadcrumb_messages.py
|4,39,49,49,1713821685,"~/recieve_breadcrumb_messages.py"
-'  49  49  ~/recieve_breadcrumb_messages.py
|4,39,49,49,1713821685,"~/recieve_breadcrumb_messages.py"
-'  50  49  ~/recieve_breadcrumb_messages.py
|4,39,50,49,1713821685,"~/recieve_breadcrumb_messages.py"
-'  49  49  ~/recieve_breadcrumb_messages.py
|4,39,49,49,1713821685,"~/recieve_breadcrumb_messages.py"
-'  49  49  ~/recieve_breadcrumb_messages.py
|4,39,49,49,1713821685,"~/recieve_breadcrumb_messages.py"
-'  49  49  ~/recieve_breadcrumb_messages.py
|4,39,49,49,1713821685,"~/recieve_breadcrumb_messages.py"
-'  50  49  ~/recieve_breadcrumb_messages.py
|4,39,50,49,1713821685,"~/recieve_breadcrumb_messages.py"
-'  49  49  ~/recieve_breadcrumb_messages.py
|4,39,49,49,1713821685,"~/recieve_breadcrumb_messages.py"
-'  49  49  ~/recieve_breadcrumb_messages.py
|4,39,49,49,1713821685,"~/recieve_breadcrumb_messages.py"
-'  49  49  ~/recieve_breadcrumb_messages.py
|4,39,49,49,1713821685,"~/recieve_breadcrumb_messages.py"
-'  37  89  ~/recieve_breadcrumb_messages.py
|4,39,37,89,1713820810,"~/recieve_breadcrumb_messages.py"
-'  37  89  ~/recieve_breadcrumb_messages.py
|4,39,37,89,1713820810,"~/recieve_breadcrumb_messages.py"
-'  37  89  ~/recieve_breadcrumb_messages.py
|4,39,37,89,1713820810,"~/recieve_breadcrumb_messages.py"
-'  37  89  ~/recieve_breadcrumb_messages.py
|4,39,37,89,1713820810,"~/recieve_breadcrumb_messages.py"
-'  37  89  ~/recieve_breadcrumb_messages.py
|4,39,37,89,1713820810,"~/recieve_breadcrumb_messages.py"
-'  37  89  ~/recieve_breadcrumb_messages.py
|4,39,37,89,1713820810,"~/recieve_breadcrumb_messages.py"
-'  37  89  ~/recieve_breadcrumb_messages.py
|4,39,37,89,1713820810,"~/recieve_breadcrumb_messages.py"
-'  37  89  ~/recieve_breadcrumb_messages.py
|4,39,37,89,1713820810,"~/recieve_breadcrumb_messages.py"
-'  37  89  ~/recieve_breadcrumb_messages.py
|4,39,37,89,1713820810,"~/recieve_breadcrumb_messages.py"
-'  37  89  ~/recieve_breadcrumb_messages.py
|4,39,37,89,1713820810,"~/recieve_breadcrumb_messages.py"
-'  37  89  ~/recieve_breadcrumb_messages.py
|4,39,37,89,1713820810,"~/recieve_breadcrumb_messages.py"

# History of marks within files (newest to oldest):

> ~/topic_clean.py
	*	1713825062	0
	"	4	36
	^	4	37
	.	4	37
	+	19	85
	+	4	37

> ~/recieve_breadcrumb_messages.py
	*	1713823646	0
	"	42	8
	^	42	9
	.	42	8
	+	1	0
	+	1	5
	+	1	27
	+	1	61
	+	1	13
	+	1	31
	+	1	59
	+	1	84
	+	1	56
	+	1	31
	+	1	0
	+	1	36
	+	1	37
	+	1	9
	+	1	69
	+	1	42
	+	1	82
	+	1	42
	+	1	82
	+	1	42
	+	1	29
	+	1	0
	+	1	83
	+	1	42
	+	1	29
	+	1	26
	+	1	61
	+	1	0
	+	1	124
	+	1	0
	+	1	43
	+	1	42
	+	1	29
	+	1	59
	+	1	98
	+	1	0
	+	1	32
	+	1	42
	+	1	83
	+	1	58
	+	1	76
	+	1	63
	+	1	12
	+	1	90
	+	1	0
	+	1	89
	+	1	26
	+	1	0
	+	1	145
	+	1	28
	+	1	0
	+	1	42
	+	80	28
	+	71	0
	+	43	52
	+	42	8

> ~/publish_breadcrumb_messages.py
	*	1713822344	0
	"	24	0
	^	39	25
	.	39	24
	+	1	76
	+	1	22
	+	1	15
	+	1	25
	+	1	15
	+	39	24

> ~/receive_breadcrumbs.log
	*	1713808473	0
	"	1	0

> ~/.gitignore
	*	1713536988	0
	"	17	0
	^	17	0
	.	16	6
	+	16	6

> ~/cron_output.log
	*	1713473229	0
	"	838	0

> ~/project1_data_collection.py
	*	1713398663	0
	"	56	22
	^	56	23
	.	56	23
	+	1	15
	+	1	29
	+	1	0
	+	1	62
	+	1	115
	+	1	15
	+	61	29
	+	48	0
	+	8	0
	+	25	48
	+	23	0
	+	25	0
	+	27	37
	+	23	42
	+	25	52
	+	23	43
	+	24	13
	+	25	54
	+	24	17
	+	25	63
	+	45	16
	+	50	13
	+	45	17
	+	53	59
	+	54	0
	+	52	32
	+	56	23

> ~/contab
	*	1713389780	0
	"	1	0

> /tmp/crontab.q8DEVN/crontab
	*	1712984424	0
	"	23	0
	^	23	1
	.	23	0
	+	23	0

> /tmp/crontab.qF0lfv/crontab
	*	1712983884	0
	"	24	0
	^	24	0
	.	23	114
	+	22	0
	+	23	114

> /tmp/crontab.y3zfCw/crontab
	*	1712983606	0
	"	23	0
	^	23	0
	.	22	114
	+	21	0
	+	22	114

> /tmp/crontab.iDcitz/crontab
	*	1712982869	0
	"	22	0
	^	22	0
	.	21	79
	+	20	0
	+	21	79

> /tmp/crontab.TMA8Ly/crontab
	*	1712982633	0
	"	20	0
	^	21	0
	.	20	77
	+	22	0
	+	19	25
	+	20	77

> ~/cs510-project1-6c1b06b5846a.json
	*	1712956235	0
	"	14	0
	^	14	0
	.	13	1
	+	13	1
